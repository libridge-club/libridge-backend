<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>br.com.sbk</groupId>
	<artifactId>sbking-client</artifactId>
	<version>1.0.0-alpha</version>
	<name>SBKing</name>
	<description>More information at https://github.com/rulojuka/sbking</description>
	<packaging>jar</packaging>

	<!-- Adds the base pom from spring boot -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.12</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>11</java.version> <!-- For spring-boot-maven-plugin -->
	</properties>

	<repositories>
		<repository>
			<id>central</id>
			<name>Central Repository (copied from Super POM)</name>
			<url>https://repo.maven.apache.org/maven2</url>
			<layout>default</layout>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>3.12.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.20.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-configuration2</artifactId>
			<version>2.9.0</version>
		</dependency>
		<!-- This commons-beanutils is needed for commons-configuration2 because the maven package is broken. -->
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.9.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.14</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>            
			<artifactId>spring-boot-starter-websocket</artifactId>
		</dependency>
	</dependencies>

	<build> <!-- Run mvn fr.jcgay.maven.plugins:buildplan-maven-plugin:list-phase to see the phase and goals-->
		<plugins>
			<!-- validate: check if all information necessary for the build is available -->
			<plugin>
				<!-- We only use one goal: checkstyle:check -->
				<!-- Bound by default to lifecycle phase: verify -->
				<!-- We bind it to: validate -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.2.2</version>
				<configuration>
					<configLocation>checkstyle/sbking_checkstyle.xml</configLocation>
					<encoding>UTF-8</encoding>
					<failOnViolation>true</failOnViolation>
					<enableFilesSummary>false</enableFilesSummary>
					<logViolationsToConsole>true</logViolationsToConsole>
				</configuration>
				<executions>
					<execution>
						<id>checkstyle</id>
						<phase>validate</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- compile: compile the source code -->
			<!-- test-compile: compile the test source code -->
			<plugin>
				<!-- There are two goals: compiler:compile and compiler:testCompile -->
				<!-- Bound by default to: compile and test-compile -->
				<!-- Here, we exclude the server-only related files -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.11.0</version>
				<configuration>
					<release>8</release> <!-- Target release -->
					<excludes>
						<exclude>br/com/sbk/sbking/networking/server/*.java</exclude>
						<exclude>br/com/sbk/sbking/networking/websockets/*.java</exclude>
						<exclude>br/com/sbk/sbking/persistence/*.java</exclude>
						<exclude>br/com/sbk/sbking/app/*.java</exclude>
					</excludes>
					<testExcludes>
						<exclude>br/com/sbk/sbking/persistence/**/*.java</exclude>
					</testExcludes>
				</configuration>
			</plugin>

			<!-- test: run unit tests -->
			<plugin>
				<!-- Only goal: surefire:test -->
				<!-- Bound by default to lifecycle phase: test -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<excludes>
						<exclude>br/com/sbk/sbking/persistence/*.java</exclude> <!-- This should run on the integration-test phase -->
					</excludes>
				</configuration>
			</plugin>

			<!-- Phase: package - package compiled source code into the distributable format (jar, war, â€¦) -->
			<!-- Spring boot automatically uses maven-jar-plugin and maven-assembly-plugin here -->
				<!-- Goal: maven-jar-plugin:jar -->
				<!-- Goal: spring-boot-maven-plugin:repackage -->
			<plugin>
				<!-- Anyway, the explicit addition of the plugin is needed -->
				<!-- for spring boot to bind spring-boot-maven-plugin:repackage to package phase -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!-- verify: run any checks to verify the package is valid and meets quality criteria. -->
			<plugin>
				<!-- There are many different goals -->
				<!-- According to documentation, prepare-agent and report should bind themselves automatically -->
				<!-- Yet, this does not happen, so we declare them explicitly -->
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.10</version>
				<executions>
					<execution>
						<id>jacoco-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-report</id>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- There are many different goals -->
				<!-- Here, we bind spotbugs:spotbugs to: verify -->
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>4.7.3.4</version>
				<executions>
					<execution>
						<id>spotbugs-spotbugs</id>
						<phase>verify</phase>
						<goals>
							<goal>spotbugs</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
