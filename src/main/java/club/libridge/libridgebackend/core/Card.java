package club.libridge.libridgebackend.core;

import java.util.EnumMap;
import java.util.Map;

import lombok.EqualsAndHashCode;
import lombok.Getter;

@Getter
@EqualsAndHashCode
@SuppressWarnings("checkstyle:FinalClass") // This class *does* have a public constructor generated by Lombok
public class Card {

    private Suit suit;
    private Rank rank;

    public Card(Suit suit, Rank rank) { // FIXME This is not lomboked because scala cannot cope with it very well
        this.suit = suit;
        this.rank = rank;
    }

    /**
     * @deprecated Kryo needs a no-arg constructor
     * FIXME kryo is not used anymore. Does jackson or spring web needs this?
     */
    @Deprecated
    @SuppressWarnings("unused")
    private Card() {
    }

    public int compareRank(Card otherCard) {
        return this.getRank().compareTo(otherCard.getRank());
    }

    public int compareSuit(Card otherCard) {
        return this.getSuit().compareTo(otherCard.getSuit());
    }

    public boolean isMan() {
        return this.isJack() || this.isKing();
    }

    public boolean isWoman() {
        return this.getRank() == Rank.QUEEN;
    }

    public boolean isKingOfHearts() {
        return this.isKing() && this.isHeart();
    }

    private boolean isJack() {
        return this.getRank() == Rank.JACK;
    }

    private boolean isKing() {
        return this.getRank() == Rank.KING;
    }

    public boolean isHeart() {
        return this.getSuit() == Suit.HEARTS;
    }

    @Override
    public String toString() {
        return this.suit.getSymbol() + this.rank.getSymbol();
    }

    public int getPoints() {
        Map<Rank, Integer> points = new EnumMap<Rank, Integer>(Rank.class); // FIXME this should be static
        points.put(Rank.ACE, 4);
        points.put(Rank.KING, 3);
        points.put(Rank.QUEEN, 2);
        points.put(Rank.JACK, 1);

        Integer value = points.get(this.rank);
        if (value == null) {
            return 0;
        } else {
            return value;
        }
    }

}
